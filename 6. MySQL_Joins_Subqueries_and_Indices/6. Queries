#Lab
#1

SELECT e.employee_id, concat_ws(' ', e.`first_name`, e.`middle_name`, e.`last_name`) AS 'full_name', 
d.department_id, d.`name` AS 'department_name'
FROM `departments` AS d
LEFT JOIN `employees` AS e
ON d.manager_id = e.employee_id
ORDER BY e.employee_id
LIMIT 5;

#2

SELECT t.town_id, t.`name` AS 'town_name', a.address_text 
FROM addresses AS a
LEFT JOIN towns AS t
ON a.town_id = t.town_id
WHERE t.`name` IN ('San Francisco', 'Sofia', 'Carnation')
ORDER BY a.town_id, a.address_id;

#3
SELECT employee_id, first_name, last_name, department_id, salary 
FROM employees
WHERE manager_id IS NULL;

#4
SELECT count(employee_id) AS 'count'
FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees);

#Exercises
#1
SELECT e.employee_id, e.job_title, a.address_id, a.address_text
FROM employees AS e
JOIN addresses AS a
ON e.address_id = a.address_id
ORDER BY e.address_id ASC
LIMIT 5;

#2
SELECT e.first_name, e.last_name, t.`name` AS 'town', a.address_text
FROM employees AS e
JOIN addresses AS a
ON e.address_id = a.address_id
JOIN towns AS t
ON a.town_id = t.town_id
ORDER BY e.first_name ASC, e.last_name ASC
LIMIT 5;

#3
SELECT e.employee_id, e.first_name, e.last_name, d.`name` AS 'department_name'
FROM employees AS e
JOIN departments AS d
ON e.department_id = d.department_id
WHERE d.`name` = 'Sales'
ORDER BY e.employee_id DESC;

#4
SELECT e.employee_id, e.first_name, e.salary, d.`name` AS 'department_name'
FROM employees AS e
JOIN departments AS d
ON e.department_id = d.department_id
WHERE salary > 15000
ORDER BY d.department_id DESC
LIMIT 5;

#5
SELECT e.employee_id, e.first_name
FROM employees AS e
LEFT JOIN employees_projects AS ep
ON e.employee_id = ep.employee_id
WHERE ep.employee_id IS NULL
ORDER BY e.employee_id DESC
LIMIT 3;

#6
SELECT e.first_name, e.last_name, e.hire_date, d.`name` AS 'dept_name'
FROM employees AS e
JOIN departments AS d
ON e.department_id = d.department_id
WHERE DATE(e.hire_date) > 1999-01-01 AND d.`name` IN ('Finance', 'Sales')
ORDER BY e.hire_date;

#7
SELECT e.employee_id, e.first_name, p.`name` AS 'project_name'
FROM employees AS e
JOIN employees_projects AS ep
ON e.employee_id = ep.employee_id
JOIN projects AS p
ON ep.project_id = p.project_id
WHERE DATE(p.start_date) > '2002-08-13' AND p.`end_date` IS NULL
ORDER BY e.first_name, p.`name`
LIMIT 5;

#8
SELECT e.employee_id, e.first_name, IF(YEAR(p.start_date) >= 2005, NULL, p.`name`) AS 'project_name'
FROM employees AS e
JOIN employees_projects AS ep
ON e.employee_id = ep.employee_id
JOIN projects AS p
ON ep.project_id = p.project_id
WHERE e.employee_id = 24
ORDER BY p.`name`;

#9
SELECT e.employee_id, e.first_name, e.manager_id, m.first_name AS 'manager_name'
FROM employees AS e
JOIN employees AS m
ON m.employee_id = e.manager_id
WHERE e.manager_id IN (3, 7)
ORDER BY e.first_name;

#10
SELECT e.employee_id, 
concat_ws(' ', e.first_name, e.last_name) AS 'employee_name', 
concat_ws(' ', m.first_name, m.last_name) AS 'manager_name',
d.`name` AS 'department_name'
FROM employees AS e
JOIN employees AS m
ON m.employee_id = e.manager_id
JOIN departments AS d
ON e.department_id = d.department_id
ORDER BY e.employee_id
LIMIT 5;

#11
SELECT AVG(salary) AS 'avg_salary'
FROM employees
GROUP BY department_id
ORDER BY avg_salary
LIMIT 1;

#12
SELECT c.`country_code`, m.`mountain_range`, p.`peak_name`, p.`elevation`
FROM countries AS c
JOIN `mountains_countries` AS mc
ON c.`country_code` = mc.`country_code`
JOIN `mountains` AS m
ON mc.mountain_id = m.id
JOIN `peaks` AS p
ON p.mountain_id = m.id
WHERE c.country_code = 'BG' AND p.`elevation` > '2835'
ORDER BY p.elevation DESC;

#13
SELECT c.`country_code`, COUNT(m.`mountain_range`) AS 'mountain_range'
FROM countries AS c
JOIN `mountains_countries` AS mc
ON c.`country_code` = mc.`country_code`
JOIN `mountains` AS m
ON mc.mountain_id = m.id
WHERE c.country_code IN ('BG', 'US', 'RU')
GROUP BY c.country_code
ORDER BY mountain_range DESC;

#14
SELECT c.country_name, r.river_name
FROM countries AS c
LEFT JOIN countries_rivers AS cr
ON c.country_code = cr.country_code
LEFT JOIN rivers AS r
ON cr.river_id = r.id
WHERE c.continent_code = 'AF'
ORDER BY c.country_name
LIMIT 5;

#15
SELECT c.`continent_code`, c.`currency_code`, COUNT(c.`country_name`) AS 'currency_usage'
FROM `countries` AS c
GROUP BY c.`continent_code`, `currency_code`
HAVING `currency_usage` = (
SELECT COUNT(`country_code`) AS 'count'
FROM `countries` AS c1
WHERE c1.continent_code = c.continent_code
GROUP BY currency_code
ORDER BY count DESC
LIMIT 1
) AND currency_usage > 1
ORDER BY `continent_code`, `currency_code`;

#16
SELECT COUNT(c.country_code) AS 'country_count'
FROM countries AS c
LEFT JOIN `mountains_countries` AS mc
ON c.`country_code` = mc.`country_code`
LEFT JOIN `mountains` AS m
ON mc.mountain_id = m.id
WHERE mc.country_code IS NULL AND m.id IS NULL;

#17
SELECT c.`country_name`, 
MAX(p.`elevation`) AS 'highest_peak_elevation', 
MAX(r.`length`) AS 'longest_river_length'
FROM countries AS c
LEFT JOIN `mountains_countries` AS mc
ON c.`country_code` = mc.`country_code`
LEFT JOIN `mountains` AS m
ON mc.mountain_id = m.id
LEFT JOIN `peaks` AS p
ON p.mountain_id = m.id
LEFT JOIN countries_rivers AS cr
ON c.country_code = cr.country_code
LEFT JOIN rivers AS r
ON cr.river_id = r.id
GROUP BY c.`country_code`
ORDER BY `highest_peak_elevation` DESC, `longest_river_length` DESC, `country_name` ASC
LIMIT 5;
